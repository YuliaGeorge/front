{"version":3,"sources":["logo.svg","components/DishdetailComponent.js","components/MenuComponent.js","shared/dishes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Dishdetail","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dish","react_default","a","createElement","className","reactstrap_es","top","src","image","alt","name","description","comments","map","comment","key","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","renderDish","renderComments","Component","Menu","_this","state","selectedDish","setState","_this2","menu","dishes","onClick","onDishSelect","width","DishdetailComponent","DISHES","category","label","price","rating","App","dark","color","href","MenuComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b2c50f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\n    \nclass Dishdetail extends Component {\n   \n   constructor(props) {\n      super(props);\n   }\n   \n   renderDish(dish) {\n      return (\n         <div className=\"col-12 col-md-5 m-1\">\n            <Card>\n               <CardImg top src={dish.image} alt={dish.name} />\n               <CardBody>\n                  <CardTitle>{dish.name}</CardTitle>\n                  <CardText>{dish.description}</CardText>\n               </CardBody>\n            </Card>\n         </div>\n      );\n   }\n   \n   renderComments(comments) {\n      if (comments != null) {\n         return (\n            <div className=\"col-12 col-md-5 m-1\">\n               <h4>Comments</h4>\n               <ul className=\"list-unstyled\">\n               {comments.map((comment) => {\n                  return (\n                     <li key={comment.id}>\n                       <p>{comment.comment}</p>\n                       <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>                                      \n                     </li>\n                  );\n                })}\n                </ul>\n            </div>\n         );\n      }\n      else {\n         return (\n            <div></div>\n         );\n      }\n   }\n   \n   render() {\n      if (this.props.dish != null) {\n         return (\n            <div className=\"container\">\n               <div className=\"row\">\n                  {this.renderDish(this.props.dish)}\n                  {this.renderComments(this.props.dish.comments)}\n               </div>\n            </div>\n         );\n      }\n      else {\n         return (\n            <div></div> \n         );\n      }\n   }\n}\n\nexport default Dishdetail;","import React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\nimport Dishdetail from './DishdetailComponent';\n\nclass Menu extends Component {\n   \n   constructor(props) {\n      super(props);\n      \n      this.state = {\n         selectedDish: null\n      }\n   }\n \n   onDishSelect(dish) {\n      this.setState({ selectedDish: dish});\n   }\n    \n   render() {   \n      const menu = this.props.dishes.map((dish) => {\n         return (\n            <div className=\"col-12 col-md-5 m-1\">\n               <Card key={dish.id} onClick={() => this.onDishSelect(dish)}>\n                  <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n                  <CardImgOverlay>\n                     <CardTitle>{dish.name}</CardTitle>\n                  </CardImgOverlay>\n               </Card>\n            </div>\n         );\n      });\n\n      return (\n         <div className=\"container\">\n            <div className=\"row\">\n               {menu}\n            </div>\n            <Dishdetail dish={this.state.selectedDish} />\n         </div>\n      );\n   }\n}\n\nexport default Menu;","export const DISHES =\n    [\n        {\n        id: 0,\n        name:'Uthappizza',\n        image: 'assets/images/uthappizza.png',\n        category: 'mains',\n        label:'Hot',\n        price:'4.99',\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]                        },\n        {\n        id: 1,\n        name:'Zucchipakoda',\n        image: 'assets/images/zucchipakoda.png',\n        category: 'appetizer',\n        label:'',\n        price:'1.99',\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]\n        },\n        {\n        id: 2,\n        name:'Vadonut',\n        image: 'assets/images/vadonut.png',\n        category: 'appetizer',\n        label:'New',\n        price:'1.99',\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]\n        },\n        {\n        id: 3,\n        name:'ElaiCheese Cake',\n        image: 'assets/images/elaicheesecake.png',\n        category: 'dessert',\n        label:'',\n        price:'2.99',\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]\n        }\n    ];","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Menu from './components/MenuComponent';\nimport { DISHES } from './shared/dishes';\nimport './App.css';\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      \n      this.state = {\n         dishes: DISHES\n      }\n   }\n  \n   render() {  \n      return (\n         <div>\n            <Navbar dark color=\"primary\">\n               <div className=\"container\">\n                  <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\n               </div>\n            </Navbar>\n           <Menu dishes={this.state.dishes} />\n        </div>\n     );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}